version: "3.6"
services:
  postgres:
    image: postgres
    restart: always
    ports:
    - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: governance-discussion
      PGDATA: /var/lib/postgresql/data
    volumes:
    # persistent data locally
    - /var/polkassembly/hasura/data:/var/lib/postgresql/data
  graphql-engine:
    network_mode: "host"
    image: hasura/graphql-engine:v1.3.0-beta.2
    volumes:
    # migration data
    - ./hasura-migrations/migrations:/hasura-migrations
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5434/governance-discussion
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: <YOUR_HASURA_ADMIN_SECRET>
      HASURA_GRAPHQL_JWT_SECRET: '{ "type": "RS256", "key": "<JWT_PUBLIC_KEY_FROM_AUTH_SERVER>" }'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: 'anonymous'
      HASURA_COMMENT_CREATE_EVENT_HOOK: "http://localhost:8010/auth/event/comment/create"
      HASURA_ONCHAIN_LINK_CREATE_HOOK: "http://localhost:8010/auth/event/onchain_link/create"
      HASURA_EVENT_SECRET: "<shared secret key with auth server>"
      HASURA_AUTH_SERVER_REMOTE_SCHEMA: http://auth-server-service:8010/auth/graphql
      HASURA_CHAIN_DB_REMOTE_SCHEMA: http://chain-db-open-server-service:4000
      # Remote schemas on Mac OS workaround:
      # HASURA_AUTH_SERVER_REMOTE_SCHEMA: "http://host.docker.internal:8010/auth/graphql"
      # HASURA_CHAIN_DB_REMOTE_SCHEMA: "http://host.docker.internal:4000"
